version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sentiment-postgres
    environment:
      - POSTGRES_DB=sentiment_analysis
      - POSTGRES_USER=sentiment_user
      - POSTGRES_PASSWORD=sentiment_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sentiment_user -d sentiment_analysis"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: sentiment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Sentiment Analysis Service
  sentiment-service:
    build:
      context: ./sentiment_service
      dockerfile: Dockerfile
    container_name: sentiment-analysis
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MODEL_DEVICE=cuda  # or cpu
      - BATCH_SIZE=100
      - MAX_CONCURRENT_BATCHES=3
    volumes:
      - ./sentiment_service:/app
      - model_cache:/root/.cache/huggingface
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/sentiment/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js API Server
  api-server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: youtube-sentiment-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://sentiment_user:sentiment_password@postgres:5432/sentiment_analysis
      - SENTIMENT_SERVICE_URL=http://sentiment-service:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./server:/app/server
      - ./shared:/app/shared
    depends_on:
      postgres:
        condition: service_healthy
      sentiment-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: youtube-sentiment-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api-server
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: sentiment-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - api-server
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  model_cache: 